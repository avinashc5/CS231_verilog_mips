$date
	Mon Aug 19 18:36:09 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_rca_32_bit $end
$var wire 1 ! cout $end
$var wire 32 " S [31:0] $end
$var parameter 32 # N $end
$var reg 32 $ A [31:0] $end
$var reg 32 % B [31:0] $end
$var reg 1 & cin $end
$scope module dut $end
$var wire 32 ' a [31:0] $end
$var wire 32 ( b [31:0] $end
$var wire 1 ) c $end
$var wire 1 & cin $end
$var wire 1 ! cout $end
$var wire 32 * S [31:0] $end
$var parameter 32 + N $end
$scope begin genblk1[0] $end
$var parameter 2 , i $end
$scope module f1 $end
$var wire 1 - S $end
$var wire 1 . a $end
$var wire 1 / b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 0 c0 $end
$var wire 1 1 S0 $end
$scope module h0 $end
$var wire 1 1 S $end
$var wire 1 . a $end
$var wire 1 / b $end
$var wire 1 0 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 2 i $end
$scope module f1 $end
$var wire 1 3 S $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 6 c0 $end
$var wire 1 7 S0 $end
$scope module h0 $end
$var wire 1 7 S $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 6 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 8 i $end
$scope module f1 $end
$var wire 1 9 S $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 < c0 $end
$var wire 1 = S0 $end
$scope module h0 $end
$var wire 1 = S $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 < cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 > i $end
$scope module f1 $end
$var wire 1 ? S $end
$var wire 1 @ a $end
$var wire 1 A b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 B c0 $end
$var wire 1 C S0 $end
$scope module h0 $end
$var wire 1 C S $end
$var wire 1 @ a $end
$var wire 1 A b $end
$var wire 1 B cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 D i $end
$scope module f1 $end
$var wire 1 E S $end
$var wire 1 F a $end
$var wire 1 G b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 H c0 $end
$var wire 1 I S0 $end
$scope module h0 $end
$var wire 1 I S $end
$var wire 1 F a $end
$var wire 1 G b $end
$var wire 1 H cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 J i $end
$scope module f1 $end
$var wire 1 K S $end
$var wire 1 L a $end
$var wire 1 M b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 N c0 $end
$var wire 1 O S0 $end
$scope module h0 $end
$var wire 1 O S $end
$var wire 1 L a $end
$var wire 1 M b $end
$var wire 1 N cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 P i $end
$scope module f1 $end
$var wire 1 Q S $end
$var wire 1 R a $end
$var wire 1 S b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 T c0 $end
$var wire 1 U S0 $end
$scope module h0 $end
$var wire 1 U S $end
$var wire 1 R a $end
$var wire 1 S b $end
$var wire 1 T cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 V i $end
$scope module f1 $end
$var wire 1 W S $end
$var wire 1 X a $end
$var wire 1 Y b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 Z c0 $end
$var wire 1 [ S0 $end
$scope module h0 $end
$var wire 1 [ S $end
$var wire 1 X a $end
$var wire 1 Y b $end
$var wire 1 Z cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 \ i $end
$scope module f1 $end
$var wire 1 ] S $end
$var wire 1 ^ a $end
$var wire 1 _ b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 ` c0 $end
$var wire 1 a S0 $end
$scope module h0 $end
$var wire 1 a S $end
$var wire 1 ^ a $end
$var wire 1 _ b $end
$var wire 1 ` cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 b i $end
$scope module f1 $end
$var wire 1 c S $end
$var wire 1 d a $end
$var wire 1 e b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 f c0 $end
$var wire 1 g S0 $end
$scope module h0 $end
$var wire 1 g S $end
$var wire 1 d a $end
$var wire 1 e b $end
$var wire 1 f cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 h i $end
$scope module f1 $end
$var wire 1 i S $end
$var wire 1 j a $end
$var wire 1 k b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 l c0 $end
$var wire 1 m S0 $end
$scope module h0 $end
$var wire 1 m S $end
$var wire 1 j a $end
$var wire 1 k b $end
$var wire 1 l cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 n i $end
$scope module f1 $end
$var wire 1 o S $end
$var wire 1 p a $end
$var wire 1 q b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 r c0 $end
$var wire 1 s S0 $end
$scope module h0 $end
$var wire 1 s S $end
$var wire 1 p a $end
$var wire 1 q b $end
$var wire 1 r cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 t i $end
$scope module f1 $end
$var wire 1 u S $end
$var wire 1 v a $end
$var wire 1 w b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 x c0 $end
$var wire 1 y S0 $end
$scope module h0 $end
$var wire 1 y S $end
$var wire 1 v a $end
$var wire 1 w b $end
$var wire 1 x cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 z i $end
$scope module f1 $end
$var wire 1 { S $end
$var wire 1 | a $end
$var wire 1 } b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 ~ c0 $end
$var wire 1 !" S0 $end
$scope module h0 $end
$var wire 1 !" S $end
$var wire 1 | a $end
$var wire 1 } b $end
$var wire 1 ~ cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 "" i $end
$scope module f1 $end
$var wire 1 #" S $end
$var wire 1 $" a $end
$var wire 1 %" b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 &" c0 $end
$var wire 1 '" S0 $end
$scope module h0 $end
$var wire 1 '" S $end
$var wire 1 $" a $end
$var wire 1 %" b $end
$var wire 1 &" cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 (" i $end
$scope module f1 $end
$var wire 1 )" S $end
$var wire 1 *" a $end
$var wire 1 +" b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 ," c0 $end
$var wire 1 -" S0 $end
$scope module h0 $end
$var wire 1 -" S $end
$var wire 1 *" a $end
$var wire 1 +" b $end
$var wire 1 ," cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 ." i $end
$scope module f1 $end
$var wire 1 /" S $end
$var wire 1 0" a $end
$var wire 1 1" b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 2" c0 $end
$var wire 1 3" S0 $end
$scope module h0 $end
$var wire 1 3" S $end
$var wire 1 0" a $end
$var wire 1 1" b $end
$var wire 1 2" cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 4" i $end
$scope module f1 $end
$var wire 1 5" S $end
$var wire 1 6" a $end
$var wire 1 7" b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 8" c0 $end
$var wire 1 9" S0 $end
$scope module h0 $end
$var wire 1 9" S $end
$var wire 1 6" a $end
$var wire 1 7" b $end
$var wire 1 8" cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 :" i $end
$scope module f1 $end
$var wire 1 ;" S $end
$var wire 1 <" a $end
$var wire 1 =" b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 >" c0 $end
$var wire 1 ?" S0 $end
$scope module h0 $end
$var wire 1 ?" S $end
$var wire 1 <" a $end
$var wire 1 =" b $end
$var wire 1 >" cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 @" i $end
$scope module f1 $end
$var wire 1 A" S $end
$var wire 1 B" a $end
$var wire 1 C" b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 D" c0 $end
$var wire 1 E" S0 $end
$scope module h0 $end
$var wire 1 E" S $end
$var wire 1 B" a $end
$var wire 1 C" b $end
$var wire 1 D" cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 F" i $end
$scope module f1 $end
$var wire 1 G" S $end
$var wire 1 H" a $end
$var wire 1 I" b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 J" c0 $end
$var wire 1 K" S0 $end
$scope module h0 $end
$var wire 1 K" S $end
$var wire 1 H" a $end
$var wire 1 I" b $end
$var wire 1 J" cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 L" i $end
$scope module f1 $end
$var wire 1 M" S $end
$var wire 1 N" a $end
$var wire 1 O" b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 P" c0 $end
$var wire 1 Q" S0 $end
$scope module h0 $end
$var wire 1 Q" S $end
$var wire 1 N" a $end
$var wire 1 O" b $end
$var wire 1 P" cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 R" i $end
$scope module f1 $end
$var wire 1 S" S $end
$var wire 1 T" a $end
$var wire 1 U" b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 V" c0 $end
$var wire 1 W" S0 $end
$scope module h0 $end
$var wire 1 W" S $end
$var wire 1 T" a $end
$var wire 1 U" b $end
$var wire 1 V" cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 X" i $end
$scope module f1 $end
$var wire 1 Y" S $end
$var wire 1 Z" a $end
$var wire 1 [" b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 \" c0 $end
$var wire 1 ]" S0 $end
$scope module h0 $end
$var wire 1 ]" S $end
$var wire 1 Z" a $end
$var wire 1 [" b $end
$var wire 1 \" cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 ^" i $end
$scope module f1 $end
$var wire 1 _" S $end
$var wire 1 `" a $end
$var wire 1 a" b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 b" c0 $end
$var wire 1 c" S0 $end
$scope module h0 $end
$var wire 1 c" S $end
$var wire 1 `" a $end
$var wire 1 a" b $end
$var wire 1 b" cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 d" i $end
$scope module f1 $end
$var wire 1 e" S $end
$var wire 1 f" a $end
$var wire 1 g" b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 h" c0 $end
$var wire 1 i" S0 $end
$scope module h0 $end
$var wire 1 i" S $end
$var wire 1 f" a $end
$var wire 1 g" b $end
$var wire 1 h" cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 j" i $end
$scope module f1 $end
$var wire 1 k" S $end
$var wire 1 l" a $end
$var wire 1 m" b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 n" c0 $end
$var wire 1 o" S0 $end
$scope module h0 $end
$var wire 1 o" S $end
$var wire 1 l" a $end
$var wire 1 m" b $end
$var wire 1 n" cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 p" i $end
$scope module f1 $end
$var wire 1 q" S $end
$var wire 1 r" a $end
$var wire 1 s" b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 t" c0 $end
$var wire 1 u" S0 $end
$scope module h0 $end
$var wire 1 u" S $end
$var wire 1 r" a $end
$var wire 1 s" b $end
$var wire 1 t" cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 v" i $end
$scope module f1 $end
$var wire 1 w" S $end
$var wire 1 x" a $end
$var wire 1 y" b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 z" c0 $end
$var wire 1 {" S0 $end
$scope module h0 $end
$var wire 1 {" S $end
$var wire 1 x" a $end
$var wire 1 y" b $end
$var wire 1 z" cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 |" i $end
$scope module f1 $end
$var wire 1 }" S $end
$var wire 1 ~" a $end
$var wire 1 !# b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 "# c0 $end
$var wire 1 ## S0 $end
$scope module h0 $end
$var wire 1 ## S $end
$var wire 1 ~" a $end
$var wire 1 !# b $end
$var wire 1 "# cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 $# i $end
$scope module f1 $end
$var wire 1 %# S $end
$var wire 1 &# a $end
$var wire 1 '# b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 (# c0 $end
$var wire 1 )# S0 $end
$scope module h0 $end
$var wire 1 )# S $end
$var wire 1 &# a $end
$var wire 1 '# b $end
$var wire 1 (# cout $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$var parameter 6 *# i $end
$scope module f1 $end
$var wire 1 +# S $end
$var wire 1 ,# a $end
$var wire 1 -# b $end
$var wire 1 & cin $end
$var wire 1 ) cout $end
$var wire 1 .# c0 $end
$var wire 1 /# S0 $end
$scope module h0 $end
$var wire 1 /# S $end
$var wire 1 ,# a $end
$var wire 1 -# b $end
$var wire 1 .# cout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11111 *#
b11110 $#
b11101 |"
b11100 v"
b11011 p"
b11010 j"
b11001 d"
b11000 ^"
b10111 X"
b10110 R"
b10101 L"
b10100 F"
b10011 @"
b10010 :"
b10001 4"
b10000 ."
b1111 ("
b1110 ""
b1101 z
b1100 t
b1011 n
b1010 h
b1001 b
b1000 \
b111 V
b110 P
b101 J
b100 D
b11 >
b10 8
b1 2
b0 ,
b100000 +
b100000 #
$end
#0
$dumpvars
0/#
0.#
0-#
0,#
0+#
0)#
0(#
0'#
0&#
0%#
0##
0"#
0!#
0~"
0}"
0{"
0z"
0y"
0x"
0w"
0u"
0t"
0s"
0r"
0q"
0o"
0n"
0m"
0l"
0k"
0i"
0h"
0g"
0f"
0e"
0c"
0b"
0a"
0`"
0_"
0]"
0\"
0["
0Z"
0Y"
0W"
0V"
0U"
0T"
0S"
0Q"
0P"
0O"
0N"
0M"
0K"
0J"
0I"
0H"
0G"
0E"
0D"
0C"
0B"
0A"
0?"
0>"
0="
0<"
0;"
09"
08"
07"
06"
05"
03"
02"
01"
00"
0/"
0-"
0,"
0+"
0*"
0)"
0'"
0&"
0%"
0$"
0#"
0!"
0~
0}
0|
0{
0y
0x
0w
0v
0u
0s
0r
0q
0p
0o
0m
0l
0k
0j
0i
0g
0f
0e
0d
0c
0a
0`
0_
0^
0]
0[
0Z
0Y
0X
0W
0U
0T
0S
0R
0Q
0O
0N
0M
0L
0K
0I
0H
0G
0F
0E
0C
0B
0A
0@
0?
0=
0<
0;
0:
09
07
06
05
04
03
01
00
0/
0.
0-
b0 *
0)
b0 (
b0 '
0&
b0 %
b0 $
b0 "
0!
$end
#1000
x!
x)
10
1/
1.
b1 %
b1 (
b1 $
b1 '
#2000
